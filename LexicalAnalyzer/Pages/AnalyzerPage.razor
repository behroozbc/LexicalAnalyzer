@page "/analyzer"
@inject HttpClient Http

<PageTitle>Analyzer</PageTitle>

<h1>Counter</h1>

<div class="row">
    <div class="col"> 
        <span> Please Input File :</span>
<InputFile OnChange="@LoadFile" />
    </div>
    <div class="col">
        <button class="btn btn-primary" @onclick="UseSample">Start With Sample Data </button>
    </div>
</div>
<div class="row">
    <div class="col">
        <h3>Input File </h3>
        <pre>
    @inputFileText
        </pre>
    </div>
    <div class="col">
        <h3>Result</h3>
<pre>
    @resultText
</pre>
    </div>
</div>

@code {
    private string inputFileText = "";
    private string resultText = "";
    private Analyze _analyzeEngine;
    private async void UseSample()
    {
        inputFileText = await Http.GetStringAsync("assets/sample.txt");
        resultText = _analyzeEngine.Result(inputFileText);
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _analyzeEngine = new Analyze(await Http.GetStringAsync("assets/matrix.txt"), Analyze.GenrateKeywordsList(await Http.GetStringAsync("assets/keyWords.txt")));
         
    }
    private async void LoadFile(InputFileChangeEventArgs e)
    {
        var fileContent =
                         new StreamContent(e.File.OpenReadStream(e.File.Size));
        inputFileText = await fileContent.ReadAsStringAsync();
        StateHasChanged();
        resultText = _analyzeEngine.Result(inputFileText);
        StateHasChanged();
    }
}
